{
	"info": {
		"_postman_id": "21e5f9eb-92bc-4da3-a5d5-67ab48d00858",
		"name": "Capstone_Fake Store API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39277962"
	},
	"item": [
		{
			"name": "GET All Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Response contains products\", () => {\r",
							"    const data = pm.response.json();\r",
							"    pm.expect(data.length).to.be.above(0);\r",
							"});\r",
							"pm.test(\"Response time < 6000ms\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(6000);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is application/json\", () => {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://fakestoreapi.com/products",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Create Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has name and job\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Test User\");\r",
							"    pm.expect(jsonData.job).to.eql(\"QA Engineer\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time < 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text"
					},
					{
						"key": "x-api-key",
						"value": "reqres-free-v1",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Test User\",\r\n  \"job\": \"QA Engineer\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT Update Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Product updated\", () => {\r",
							"    const data = pm.response.json();\r",
							"    pm.expect(data.title).to.eql(\"Updated Product Name\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Updated Product Name\",\r\n  \"price\": 555\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fakestoreapi.com/products/1\n\n",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"products",
						"1\n\n"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Price updated\", () => {\r",
							"    const data = pm.response.json();\r",
							"    pm.expect(data.price).to.eql(777);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"price\": 777\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://fakestoreapi.com/products/1",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"products",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"pm.test(\"Product deleted\", () => {\r",
							"    const data = pm.response.json();\r",
							"    pm.expect(data.id).to.eql(1); // or check 'data' is not null\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://fakestoreapi.com/products/1",
					"protocol": "https",
					"host": [
						"fakestoreapi",
						"com"
					],
					"path": [
						"products",
						"1"
					]
				}
			},
			"response": []
		}
	]
}